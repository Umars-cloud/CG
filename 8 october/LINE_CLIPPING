#include <stdio.h>
#include <graphics.h>

int code(int x, int y, int xmin, int xmax, int ymin, int ymax) {
    int c = 0;
    if (x < xmin) c |= 1;
    else if (x > xmax) c |= 2;
    if (y < ymin) c |= 4;
    else if (y > ymax) c |= 8;
    return c;
}

int main() {
    int gd = DETECT, gm;
    int x1, x2, y1, y2, xmin, xmax, ymin, ymax;
    printf("Enter XVmin: ");
    scanf("%d", &xmin);
    printf("Enter XVmax: ");
    scanf("%d", &xmax);
    printf("Enter YVmin: ");
    scanf("%d", &ymin);
    printf("Enter YVmax: ");
    scanf("%d", &ymax);
    printf("Enter point 1 (x-coordinate): ");
    scanf("%d", &x1);
    printf("Enter point 1 (y-coordinate): ");
    scanf("%d", &y1);
    printf("Enter point 2 (x-coordinate): ");
    scanf("%d", &x2);
    printf("Enter point 2 (y-coordinate): ");
    scanf("%d", &y2);

    initgraph(&gd, &gm, NULL);
    rectangle(xmin, ymin, xmax, ymax);

    int c1 = code(x1, y1, xmin, xmax, ymin, ymax);
    int c2 = code(x2, y2, xmin, xmax, ymin, ymax);
    int f = 0;

    while (1) {
        if (!(c1 | c2)) {
            f = 1;
            break;
        } else if (c1 & c2) {
            break;
        } else {
            int out_c;
            float x, y;
            if (c1) out_c = c1;
            else out_c = c2;

            if (out_c & 8) {
                x = x1 + (x2 - x1) * (ymax - y1) / (y2 - y1);
                y = ymax;
            } else if (out_c & 4) {
                x = x1 + (x2 - x1) * (ymin - y1) / (y2 - y1);
                y = ymin;
            } else if (out_c & 2) {
                y = y1 + (y2 - y1) * (xmax - x1) / (x2 - x1);
                x = xmax;
            } else if (out_c & 1) {
                y = y1 + (y2 - y1) * (xmin - x1) / (x2 - x1);
                x = xmin;
            }

            if (out_c == c1) {
                x1 = x;
                y1 = y;
                c1 = code(x1, y1, xmin, xmax, ymin, ymax);
            } else {
                x2 = x;
                y2 = y;
                c2 = code(x2, y2, xmin, xmax, ymin, ymax);
            }
        }
    }

    if (f == 1) {
        setcolor(GREEN);
        line(x1, y1, x2, y2);
        delay(50000);
    }

    closegraph();
    return 0;
}
